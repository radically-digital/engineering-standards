"use strict";(self.webpackChunkengineering_standards=self.webpackChunkengineering_standards||[]).push([[7852],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>m});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function p(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?p(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):p(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},p=Object.keys(e);for(n=0;n<p.length;n++)r=p[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(n=0;n<p.length;n++)r=p[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),a=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=a(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,p=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=a(r),m=o,y=d["".concat(c,".").concat(m)]||d[m]||u[m]||p;return r?n.createElement(y,i(i({ref:t},l),{},{components:r})):n.createElement(y,i({ref:t},l))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var p=r.length,i=new Array(p);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var a=2;a<p;a++)i[a]=r[a];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},73:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>p,metadata:()=>s,toc:()=>a});var n=r(7462),o=(r(7294),r(3905));const p={},i="Use Typescript",s={unversionedId:"clientside/react/components/use-typescript",id:"clientside/react/components/use-typescript",title:"Use Typescript",description:"Typescript is ideal for working with React components. It does compile time prop checking on components and will suit 90% of ways of working. If you require runtime type checking however, consider InferPropTypes from @types/prop-types.",source:"@site/docs/clientside/react/components/use-typescript.md",sourceDirName:"clientside/react/components",slug:"/clientside/react/components/use-typescript",permalink:"/docs/clientside/react/components/use-typescript",draft:!1,editUrl:"https://github.com/radically-digital/radically-digital.github.io/tree/main/docs/docs/clientside/react/components/use-typescript.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Use Error Boundaries",permalink:"/docs/clientside/react/components/use-error-boundaries"},next:{title:"Write Comments in JSX",permalink:"/docs/clientside/react/components/write-comments-in-jsx"}},c={},a=[],l={toc:a};function u(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"use-typescript"},"Use Typescript"),(0,o.kt)("p",null,"Typescript is ideal for working with React components. It does compile time prop checking on components and will suit 90% of ways of working. If you require runtime type checking however, consider ",(0,o.kt)("inlineCode",{parentName:"p"},"InferPropTypes")," from ",(0,o.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@types/prop-types"},"@types/prop-types"),"."),(0,o.kt)("p",null,"An example of implementation:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'// Adapted from https://blog.logrocket.com/comparing-typescript-and-proptypes-in-react-applications\nimport React from "react";\nimport PropTypes, { InferProps } from "prop-types";\n\nconst BlogCardPropTypes = {\n  title: PropTypes.string.isRequired,\n  createdAt: PropTypes.instanceOf(Date),\n  authorName: PropTypes.string.isRequired,\n};\n\ntype BlogCardTypes = InferProps<typeof BlogCardPropTypes>;\nexport const BlogCard: React.FC<BlogCardTypes> = ({\n  authorName,\n  createdAt,\n  title,\n}) => {\n  return <span>Blog Card</span>;\n};\n\nBlogCard.propTypes = BlogCardPropTypes;\n')))}u.isMDXComponent=!0}}]);