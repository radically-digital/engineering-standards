"use strict";(self.webpackChunkengineering_standards=self.webpackChunkengineering_standards||[]).push([[6984],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,k=u["".concat(s,".").concat(m)]||u[m]||d[m]||i;return n?a.createElement(k,o(o({ref:t},c),{},{components:n})):a.createElement(k,o({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},248:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const i={},o="12 Factor App Checklist",l={unversionedId:"general/factor-app-checklist",id:"general/factor-app-checklist",title:"12 Factor App Checklist",description:"The twelve-factor app is a methodology for building software-as-a-service apps that:",source:"@site/docs/general/12-factor-app-checklist.md",sourceDirName:"general",slug:"/general/factor-app-checklist",permalink:"/docs/general/factor-app-checklist",draft:!1,editUrl:"https://github.com/radically-digital/radically-digital.github.io/tree/main/docs/docs/general/12-factor-app-checklist.md",tags:[],version:"current",sidebarPosition:12,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"General",permalink:"/docs/category/general"},next:{title:"Casing Conventions",permalink:"/docs/general/casing-conventions"}},s={},p=[{value:"Codebase",id:"codebase",level:2},{value:"Dependencies",id:"dependencies",level:2},{value:"Config",id:"config",level:2},{value:"Backing Services",id:"backing-services",level:2},{value:"Build, Release, Run",id:"build-release-run",level:2},{value:"Processes",id:"processes",level:2},{value:"Port binding",id:"port-binding",level:2},{value:"Concurrency",id:"concurrency",level:2},{value:"Disposability",id:"disposability",level:2},{value:"Dev/prod parity",id:"devprod-parity",level:2},{value:"Logs",id:"logs",level:2},{value:"Admin processes",id:"admin-processes",level:2}],c={toc:p};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"12-factor-app-checklist"},"12 Factor App Checklist"),(0,r.kt)("p",null,"The ",(0,r.kt)("a",{parentName:"p",href:"https://12factor.net/"},"twelve-factor app")," is a methodology for building software-as-a-service apps that:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Use ",(0,r.kt)("strong",{parentName:"li"},"declarative")," formats for setup automation, to minimize time and cost for new developers joining the project;"),(0,r.kt)("li",{parentName:"ul"},"Have a ",(0,r.kt)("strong",{parentName:"li"},"clean contract")," with the underlying operating system, offering ",(0,r.kt)("strong",{parentName:"li"},"maximum portability")," between execution environments;"),(0,r.kt)("li",{parentName:"ul"},"Are suitable for ",(0,r.kt)("strong",{parentName:"li"},"deployment")," on modern ",(0,r.kt)("strong",{parentName:"li"},"cloud platforms"),", obviating the need for servers and systems administration;"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Minimize divergence")," between development and production, enabling ",(0,r.kt)("strong",{parentName:"li"},"continuous deployment")," for maximum agility;"),(0,r.kt)("li",{parentName:"ul"},"And can ",(0,r.kt)("strong",{parentName:"li"},"scale up")," without significant changes to tooling, architecture, or development practices.")),(0,r.kt)("p",null,"The following is from ",(0,r.kt)("a",{parentName:"p",href:"https://cloudposse.com/12-factor-app/"},"Cloudposse - 12 Factor App Checklist")),(0,r.kt)("h2",{id:"codebase"},(0,r.kt)("a",{parentName:"h2",href:"https://12factor.net/codebase"},"Codebase")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"One-repo-per-service (poly-repo) architectures (preferred, not required)"),(0,r.kt)("li",{parentName:"ul"},"Use a Git-based workflow with PRs & approval process"),(0,r.kt)("li",{parentName:"ul"},"Dockerized with a ",(0,r.kt)("inlineCode",{parentName:"li"},"Dockerfile")),(0,r.kt)("li",{parentName:"ul"},"Automated tests exist to validate application works")),(0,r.kt)("h2",{id:"dependencies"},(0,r.kt)("a",{parentName:"h2",href:"https://12factor.net/dependencies"},"Dependencies")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Service dependencies are explicitly declared in the configuration (e.g. ",(0,r.kt)("inlineCode",{parentName:"li"},"DB_HOST"),")"),(0,r.kt)("li",{parentName:"ul"},"Services are loosely coupled so that they can be started in any order"),(0,r.kt)("li",{parentName:"ul"},"Application dependencies are explicitly pinned in manifests (E.g. ",(0,r.kt)("inlineCode",{parentName:"li"},"package.json"),");"),(0,r.kt)("li",{parentName:"ul"},"Use ",(0,r.kt)("a",{parentName:"li",href:"https://semver.org/"},"semver")," rather than commit SHAs for pinning, where possible")),(0,r.kt)("h2",{id:"config"},(0,r.kt)("a",{parentName:"h2",href:"https://12factor.net/config"},"Config")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"All configuration settings are passed via environment variables and not hardcoded."),(0,r.kt)("li",{parentName:"ul"},"Services can be dynamically reconfigured without recompilation (e.g. by changing settings)"),(0,r.kt)("li",{parentName:"ul"},"Use DNS-based service discovery (instead of IPs or depend on ",(0,r.kt)("inlineCode",{parentName:"li"},"consul"),"); use short-dns names with search domains rather than FQHN"),(0,r.kt)("li",{parentName:"ul"},"Use AWS SDK's automatic AWS configuration (E.g. do not validate ",(0,r.kt)("inlineCode",{parentName:"li"},"AWS_ACCESS_KEY_ID"),", and ",(0,r.kt)("inlineCode",{parentName:"li"},"AWS_SECRET_ACCESS_KEY")," variables are configured)")),(0,r.kt)("h2",{id:"backing-services"},(0,r.kt)("a",{parentName:"h2",href:"https://12factor.net/backing-services"},"Backing Services")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Use object storage where files are needed (not local storage)"),(0,r.kt)("li",{parentName:"ul"},"Use external databases (e.g. Postgres, MySQL, Redis, etc) to persist state"),(0,r.kt)("li",{parentName:"ul"},"Use environment variables for configuration (e.g. timeouts, endpoints, etc)"),(0,r.kt)("li",{parentName:"ul"},"Use configurable timeouts on connections, responses from backends")),(0,r.kt)("h2",{id:"build-release-run"},(0,r.kt)("a",{parentName:"h2",href:"https://12factor.net/build-release-run"},"Build, Release, Run")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Well-defined process to build (e.g. compile) the application and start it (e.g. a ",(0,r.kt)("inlineCode",{parentName:"li"},"Makefile"),")"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Dockerfile")," defines ",(0,r.kt)("inlineCode",{parentName:"li"},"ENTRYPOINT")," to run the application"),(0,r.kt)("li",{parentName:"ul"},"Docker composition (",(0,r.kt)("inlineCode",{parentName:"li"},"docker-compose.yml"),") can bring up the environment for automated testing"),(0,r.kt)("li",{parentName:"ul"},"Cut releases on merge to master (preferred, not required); use ",(0,r.kt)("a",{parentName:"li",href:"https://semver.org/"},"semver"))),(0,r.kt)("h2",{id:"processes"},(0,r.kt)("a",{parentName:"h2",href:"https://12factor.net/processes"},"Processes")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"All processes must expose health check endpoints (",(0,r.kt)("inlineCode",{parentName:"li"},"/healthz"),")"),(0,r.kt)("li",{parentName:"ul"},"Should not depend on a process manager (e.g. ",(0,r.kt)("inlineCode",{parentName:"li"},"pm2"),")"),(0,r.kt)("li",{parentName:"ul"},"Should exit non-zero upon fatal errors"),(0,r.kt)("li",{parentName:"ul"},"Must respond to ",(0,r.kt)("inlineCode",{parentName:"li"},"SIGTERM")," and exit gracefully"),(0,r.kt)("li",{parentName:"ul"},"Health checks should not depend on the health of the backing services"),(0,r.kt)("li",{parentName:"ul"},"Does not require privileged execution (e.g. ",(0,r.kt)("inlineCode",{parentName:"li"},"root"),")")),(0,r.kt)("h2",{id:"port-binding"},(0,r.kt)("a",{parentName:"h2",href:"https://12factor.net/port-binding"},"Port binding")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Dockerfiles")," define a ",(0,r.kt)("inlineCode",{parentName:"li"},"PORT")," definition"),(0,r.kt)("li",{parentName:"ul"},"Services should listen on a preconfigured bind-address and port (e.g. ",(0,r.kt)("inlineCode",{parentName:"li"},"0.0.0.0:8000"),")"),(0,r.kt)("li",{parentName:"ul"},"Should listen on ",(0,r.kt)("a",{parentName:"li",href:"https://www.w3.org/Daemon/User/Installation/PrivilegedPorts.html"},"non-privileged ports")," (",(0,r.kt)("inlineCode",{parentName:"li"},"> 1024"),")")),(0,r.kt)("h2",{id:"concurrency"},(0,r.kt)("a",{parentName:"h2",href:"https://12factor.net/concurrency"},"Concurrency")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Application can be run any number of times in parallel (e.g. no expectation of locking)"),(0,r.kt)("li",{parentName:"ul"},"Application does not maintain a large pool of persistent database connections (e.g. configurable pool size)"),(0,r.kt)("li",{parentName:"ul"},"Application uses database transactions, if applicable; avoids deadlocks"),(0,r.kt)("li",{parentName:"ul"},"Application does not depend on sticky sessions; requests can hit any process")),(0,r.kt)("h2",{id:"disposability"},(0,r.kt)("a",{parentName:"h2",href:"https://12factor.net/disposability"},"Disposability")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Should be entirely stateless (e.g. not maintain any local state, all state offloaded to backing services)"),(0,r.kt)("li",{parentName:"ul"},"Processes can be easily created or destroyed without any orchestrated shutdown process"),(0,r.kt)("li",{parentName:"ul"},"No POSIX filesystem required for persistence (local caching/buffering okay)")),(0,r.kt)("h2",{id:"devprod-parity"},(0,r.kt)("a",{parentName:"h2",href:"https://12factor.net/dev-prod-parity"},"Dev/prod parity")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"All environments function the same way when configured with the same settings"),(0,r.kt)("li",{parentName:"ul"},"Flags should enable/disable functionality without knowledge of stage or environment (e.g. ",(0,r.kt)("strong",{parentName:"li"},"do not use")," ",(0,r.kt)("inlineCode",{parentName:"li"},"if ($environment == 'dev') { ... })")),(0,r.kt)("li",{parentName:"ul"},"Do not use hostnames for conditional/routing logic (that's the job of ",(0,r.kt)("inlineCode",{parentName:"li"},"Ingress"),")")),(0,r.kt)("h2",{id:"logs"},(0,r.kt)("a",{parentName:"h2",href:"https://12factor.net/logs"},"Logs")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Logs are emitted to ",(0,r.kt)("inlineCode",{parentName:"li"},"stdout")),(0,r.kt)("li",{parentName:"ul"},"Events are structured event streams (e.g. JSON)"),(0,r.kt)("li",{parentName:"ul"},"Do not write logs to disk (to mitigate the need for log rotation)")),(0,r.kt)("h2",{id:"admin-processes"},(0,r.kt)("a",{parentName:"h2",href:"https://12factor.net/admin-processes"},"Admin processes")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Database migrations should be automated and run as a separate container"),(0,r.kt)("li",{parentName:"ul"},"Cronjobs can be run as a separate container"),(0,r.kt)("li",{parentName:"ul"},"Batch processing should run as a separate container")))}d.isMDXComponent=!0}}]);