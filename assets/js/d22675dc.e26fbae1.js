"use strict";(self.webpackChunkengineering_standards=self.webpackChunkengineering_standards||[]).push([[4190],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>d});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=o.createContext({}),s=function(e){var t=o.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=s(e.components);return o.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=s(n),d=r,f=u["".concat(p,".").concat(d)]||u[d]||m[d]||i;return n?o.createElement(f,a(a({ref:t},l),{},{components:n})):o.createElement(f,a({ref:t},l))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=u;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:r,a[1]=c;for(var s=2;s<i;s++)a[s]=n[s];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},8410:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>m,frontMatter:()=>i,metadata:()=>c,toc:()=>s});var o=n(7462),r=(n(7294),n(3905));const i={},a="Move Lists in a Separate Component",c={unversionedId:"clientside/react/components/move-lists-in-a-separate-component",id:"clientside/react/components/move-lists-in-a-separate-component",title:"Move Lists in a Separate Component",description:"Looping through a list of items is a common occurrence, usually done with the map function. However, in a component that has a lot of markup, the extra indentation and the syntax of map don\u2019t help with readability.",source:"@site/docs/clientside/react/components/move-lists-in-a-separate-component.md",sourceDirName:"clientside/react/components",slug:"/clientside/react/components/move-lists-in-a-separate-component",permalink:"/docs/clientside/react/components/move-lists-in-a-separate-component",draft:!1,editUrl:"https://github.com/radically-digital/radically-digital.github.io/tree/main/docs/docs/clientside/react/components/move-lists-in-a-separate-component.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Minimise the use of Optional Chaining",permalink:"/docs/clientside/react/components/minimise-the-use-of-optional-chaining"},next:{title:"Number of Props",permalink:"/docs/clientside/react/components/number-of-props"}},p={},s=[],l={toc:s};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"move-lists-in-a-separate-component"},"Move Lists in a Separate Component"),(0,r.kt)("p",null,"Looping through a list of items is a common occurrence, usually done with the ",(0,r.kt)("inlineCode",{parentName:"p"},"map")," function. However, in a component that has a lot of markup, the extra indentation and the syntax of ",(0,r.kt)("inlineCode",{parentName:"p"},"map")," don\u2019t help with readability."),(0,r.kt)("p",null,"When you need to map over elements, extract them in their own listing component, even if the markup isn\u2019t much. The parent component doesn\u2019t need to know about the details, only that it\u2019s displaying a list."),(0,r.kt)("p",null,"Only keep a loop in the markup if the component\u2019s main responsibility is to display it. Try to keep a single mapping per component but if the markup is long or complicated, extract the list either way."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"// \ud83d\udc4e Don't write loops together with the rest of the markup\nfunction Component({ topic, page, articles, onNextPage }) {\n  return (\n    <div>\n      <h1>{topic}</h1>\n      {articles.map((article) => (\n        <div>\n          <h3>{article.title}</h3>\n          <p>{article.teaser}</p>\n          <img src={article.image} />\n        </div>\n      ))}\n      <div>You are on page {page}</div>\n      <button onClick={onNextPage}>Next</button>\n    </div>\n  );\n}\n\n// \ud83d\udc4d Extract the list in its own component\nfunction Component({ topic, page, articles, onNextPage }) {\n  return (\n    <div>\n      <h1>{topic}</h1>\n      <ArticlesList articles={articles} />\n      <div>You are on page {page}</div>\n      <button onClick={onNextPage}>Next</button>\n    </div>\n  );\n}\n")))}m.isMDXComponent=!0}}]);