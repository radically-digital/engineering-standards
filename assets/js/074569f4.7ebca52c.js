"use strict";(self.webpackChunkengineering_standards=self.webpackChunkengineering_standards||[]).push([[3579],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>m});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var o=r.createContext({}),l=function(e){var t=r.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},d=function(e){var t=l(e.components);return r.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,o=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=l(a),m=n,f=u["".concat(o,".").concat(m)]||u[m]||p[m]||i;return a?r.createElement(f,c(c({ref:t},d),{},{components:a})):r.createElement(f,c({ref:t},d))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,c=new Array(i);c[0]=u;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:n,c[1]=s;for(var l=2;l<i;l++)c[l]=a[l];return r.createElement.apply(null,c)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},4579:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var r=a(7462),n=(a(7294),a(3905));const i={},c="Use Data Fetching Libraries",s={unversionedId:"clientside/react/state-management/use-data-fetching-libraries",id:"clientside/react/state-management/use-data-fetching-libraries",title:"Use Data Fetching Libraries",description:"Often the data that we want to manage in state is retrieved from an API. We need to keep that data in memory, update it and access it in multiple places.",source:"@site/docs/clientside/react/state-management/use-data-fetching-libraries.md",sourceDirName:"clientside/react/state-management",slug:"/clientside/react/state-management/use-data-fetching-libraries",permalink:"/docs/clientside/react/state-management/use-data-fetching-libraries",draft:!1,editUrl:"https://github.com/radically-digital/radically-digital.github.io/tree/main/docs/docs/clientside/react/state-management/use-data-fetching-libraries.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"State Management Libraries",permalink:"/docs/clientside/react/state-management/state-management-libraries"},next:{title:"Use Reducers",permalink:"/docs/clientside/react/state-management/use-reducers"}},o={},l=[],d={toc:l};function p(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"use-data-fetching-libraries"},"Use Data Fetching Libraries"),(0,n.kt)("p",null,"Often the data that we want to manage in state is retrieved from an API. We need to keep that data in memory, update it and access it in multiple places."),(0,n.kt)("p",null,"Modern data fetching libraries like ",(0,n.kt)("a",{parentName:"p",href:"https://react-query.tanstack.com/"},"React Query")," provide enough mechanisms to manage the external data. We can cache it, invalidate it and fetch it anew. They can be used for sending data as well, triggering a refresh for another piece of data."),(0,n.kt)("p",null,"It\u2019s even easier if you\u2019re working with a GraphQL client like ",(0,n.kt)("a",{parentName:"p",href:"https://www.apollographql.com/docs/react/"},"Apollo"),". It has the concept of client state built in."))}p.isMDXComponent=!0}}]);